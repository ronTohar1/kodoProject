import json
import requests
from utilities import MALWARE_PATH, BENIGN_PATH, MINERS_PATH, MINER_LABEL, NON_MINER_LABEL, NUMBER_OF_FILES
import pefile
import os
from zipfile import ZipFile

api_key = "7e8fa83574d0a78b37b37daa819f6069"
url = "https://mb-api.abuse.ch/api/v1/"

def check_is_pe(file):
    try:
        pe = pefile.PE(file)
        return True
    except pefile.PEFormatError:
        return False

def download_hashes(hashes):
    name = "file_"
    for i,hash in enumerate(hashes):
        post_data2 = {"query": "get_file",
                        "sha256_hash": str(hash)}
        response = requests.post(url, data=post_data2)
        res_type = response.headers['content-type']
        if res_type == 'application/json':
            data = response.json()
            print(data)
        if res_type == 'application/zip':
            with open(f"{MINERS_PATH}/{name}{i}.zip", "wb") as f:
                f.write(response.content)
                print("Zip file successfully downloaded.")


def get_miners():
    post_data = {"query": "get_taginfo",
                "tag":"coinminer", "limit":"520", "type":"exe"}

    # Make the API request
    response = requests.post(url, data=post_data, )
    # Check if the request was successful
    if response.status_code == 200:
        res_type = response.headers['content-type']
        if res_type == 'application/json':
            data = response.json()
            hashes = [x['sha256_hash'] for x in data['data']]
        
        download_hashes(hashes)
        
    else:
        # Handle the error
        print("Request failed with status code:", response.status_code)


def main():
    get_miners()

if __name__ == "__main__":
    main()